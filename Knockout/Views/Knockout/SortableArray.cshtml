@{
    ViewBag.Title = "SortableArray";
}

<h2>SortableArray</h2>
<div id="moduleCotainer">
    <!-- ko with:LogoModule -->
    <img data-bind="attr:{src:Logo}" />
    <!--/ko-->

    <div class="container" data-bind="sortable: Modules">
        <div>
            <!--ko if: Type()=='title'-->
            <div data-bind="attr:{id:Id}">
                <div   data-bind="text: Id"></div>
                <div class="title" data-bind="text: Title,class:TitleStyleColorArray"></div>
                <ul data-bind="foreach:Products">
                    <li data-bind="text:Name"></li>
                </ul>
                <input type="button" value="删除" data-bind="click:$parent.Remove"/>
                <input type="button" value="新增" data-bind="click:$parent.Add"/>
            </div>
            <!--/ko-->
            <!--ko if: Type()=='tag'-->
            <div data-bind="attr:{id:Id}">
                <div data-bind="text: Id"></div>
                <div class="item" data-bind="text: Name"></div>

                <ul data-bind="foreach:Products,class:TagStyleColorArray">

                    <li><!--ko text:Name--><!--/ko--></li>

                </ul>

                <input type="button" value="删除" data-bind="click:$parent.Remove"/>
                <input type="button" value="新增" data-bind="click:$parent.Add"/>
            </div>
            <!--/ko-->
        </div>
    </div>

    <input type="button" value="获取排序数据" data-bind="click:SaveAll" />
</div>
<script type="text/javascript">
    function StoreModuleViewModel() {
        var self = this;
        //草稿id
        self.Id = ko.observable(0);

        //默认的时候全局id
        self.GlobalId = 0;
        self.GetGlobalId = function () {
            var modules = self.Modules();

            var moduleLength = modules.length;
            var newArray = [];
            for (var i = 0; i < moduleLength; i++) {
                newArray.push(modules[i].Id());
            }
            for (var i = 0; i < moduleLength; i++) {
                for (var j = 1; j < moduleLength - i; j++) {
                    if (newArray[j - 1] > newArray[j]) {
                        newArray[j] = newArray[j - 1];
                    }
                }
            }
            var globalId = self.GlobalId + moduleLength == 0 ? 0 : newArray[moduleLength - 1];
            return ++globalId;
        }

        //排序数组
        //self.SortArray = [];

        self.LogoModule = ko.observable();

        //模块集合
        self.Modules = ko.observableArray([]);

        self.Add = function () {
            var titleModule = new TitleModule();
            titleModule.Id(4);
            titleModule.Products.push(new Product());
            self.Modules.push(titleModule);
        }

        //保存
        self.SaveAll=function() {
            console.log(ko.toJSON(self));
        }

        self.Remove=function(item) {
            self.Modules.remove(item);
        }
    }

    function LogoModule() {
        var self = this;
        self.Id = ko.observable();
        self.Logo = ko.observable("http://www.baidu.com/img/bd_logo1.png");
    }

    function TitleModule() {
        var self = this;
        self.Id = ko.observable();
        self.Type = ko.observable("title");
        self.Title = ko.observable("TitleModule");

        self.Products = ko.observableArray([]);

        self.TitleStyleColorArray = ko.observableArray(["class4", "class3"]);
    }

    function TagModule() {
        var self = this;
        self.Id = ko.observable();
        self.Type = ko.observable("tag");
        self.Products = ko.observableArray([]);
        self.Name = ko.observable("TagModule");

        self.TagStyleColorArray = ko.observableArray(["class2", "class1"]);
    }

    function Product() {
        var self = this;

        self.Name = ko.observable("默认商品");
    }

    $(function() {
        var storeModuleViewModel = new StoreModuleViewModel();

        storeModuleViewModel.LogoModule(new LogoModule());

        var tagModule = new TagModule();
        tagModule.Id(1);
        tagModule.Products.push(new Product());
        storeModuleViewModel.Modules.push(tagModule);

        var tagModule1 = new TagModule();
        tagModule1.Id(2);
        tagModule1.Products.push(new Product());
        storeModuleViewModel.Modules.push(tagModule1);

        var titleModule = new TitleModule();
        titleModule.Id(3);
        titleModule.Products.push(new Product());
        storeModuleViewModel.Modules.push(titleModule);

        ko.applyBindings(storeModuleViewModel, document.getElementById("moduleCotainer"));
    });
</script>